name: Run Unit Tests, Dockerize User Service and Deploy to GKE

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GAR_LOCATION: us-central1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: shop-api-user-service

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Run Unit Tests
        run: npm test

  docker:
    name: Build, Publish Docker Image
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Build and push to dockerhub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/shop-api-user-service

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: [docker]
    environment: production
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Get the GKE Credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      - name: Deploy to GKE
        run: |-
          kubectl delete -f ./k8s/deployment.yml && kubectl apply -f ./k8s/deployment.yml
          kubectl apply -f ./k8s/service.yml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
